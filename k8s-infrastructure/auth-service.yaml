apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: auth-service
  name: auth-service
  namespace: fullstack-microservice-golang
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: auth-service
    spec:
      containers:
      - image: asia-south1-docker.pkg.dev/sounish-cloud-workstation/fullstack-microservices-golang-gke/go-auth-service:v241019.0455
        name: go-auth-service
        ports:
        - containerPort: 3000
        env:
        - name: AUTH_SERVICE_PORT
          value: "3000"
        - name: AUTH_SERVICE_JWT_SECRET
          value: "5u43r5Ec2Et%455W0r4!as&(!Q)"
        - name: AUTH_SERVICE_DSN
          value: "postgres://root:password@postgres-clousql-proxy-tnjx9:5432/auth?sslmode=disable"
        resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: auth-service
  name: auth-service
  namespace: fullstack-microservice-golang
spec:
  ports:
  - name: "3000"
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: auth-service
  type: ClusterIP
status:
  loadBalancer: {}
---
---
apiVersion: "networking.k8s.io/v1"
kind: "Ingress"
metadata:
  name: "auth-service-ingress"
  namespace: "fullstack-microservice-golang"
spec:
  defaultBackend:
    service:
      name: "auth-service"
      port:
        number: 3000
status:
  loadBalancer: {}
